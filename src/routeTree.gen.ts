/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksImport } from './routes/tasks'
import { Route as StarBoardImport } from './routes/star-board'
import { Route as HomeImport } from './routes/home'
import { Route as GateImport } from './routes/gate'
import { Route as FriendsImport } from './routes/friends'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TasksRoute = TasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => rootRoute,
} as any)

const StarBoardRoute = StarBoardImport.update({
  id: '/star-board',
  path: '/star-board',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const GateRoute = GateImport.update({
  id: '/gate',
  path: '/gate',
  getParentRoute: () => rootRoute,
} as any)

const FriendsRoute = FriendsImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/friends': {
      id: '/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof FriendsImport
      parentRoute: typeof rootRoute
    }
    '/gate': {
      id: '/gate'
      path: '/gate'
      fullPath: '/gate'
      preLoaderRoute: typeof GateImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/star-board': {
      id: '/star-board'
      path: '/star-board'
      fullPath: '/star-board'
      preLoaderRoute: typeof StarBoardImport
      parentRoute: typeof rootRoute
    }
    '/tasks': {
      id: '/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/friends': typeof FriendsRoute
  '/gate': typeof GateRoute
  '/home': typeof HomeRoute
  '/star-board': typeof StarBoardRoute
  '/tasks': typeof TasksRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/friends': typeof FriendsRoute
  '/gate': typeof GateRoute
  '/home': typeof HomeRoute
  '/star-board': typeof StarBoardRoute
  '/tasks': typeof TasksRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/friends': typeof FriendsRoute
  '/gate': typeof GateRoute
  '/home': typeof HomeRoute
  '/star-board': typeof StarBoardRoute
  '/tasks': typeof TasksRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/friends' | '/gate' | '/home' | '/star-board' | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/friends' | '/gate' | '/home' | '/star-board' | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/friends'
    | '/gate'
    | '/home'
    | '/star-board'
    | '/tasks'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FriendsRoute: typeof FriendsRoute
  GateRoute: typeof GateRoute
  HomeRoute: typeof HomeRoute
  StarBoardRoute: typeof StarBoardRoute
  TasksRoute: typeof TasksRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FriendsRoute: FriendsRoute,
  GateRoute: GateRoute,
  HomeRoute: HomeRoute,
  StarBoardRoute: StarBoardRoute,
  TasksRoute: TasksRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/friends",
        "/gate",
        "/home",
        "/star-board",
        "/tasks"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/friends": {
      "filePath": "friends.tsx"
    },
    "/gate": {
      "filePath": "gate.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/star-board": {
      "filePath": "star-board.tsx"
    },
    "/tasks": {
      "filePath": "tasks.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
